{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <div class="pull-right">
        {% if is_merchant_transaction %}
            {% if is_authorized %}
                <a id="transaction_capture" data-url-transaction-capture="{{ url_capture }}" data-confirm-capture="{{ confirm_capture }}" class="btn btn-success">{{ button_capture }}</a>
                <a id="transaction_void" data-url-transaction-void="{{ url_void }}" data-confirm-void="{{ confirm_void }}" class="btn btn-warning">{{ button_void }}</a>
            {% endif %}
            
            {% if is_captured and not is_fully_refunded %}
                <a id="transaction_refund" data-url-transaction-refund="{{ url_refund }}" data-url-transaction-refund-modal="{{ url_refund_modal }}" class="btn btn-danger">{{ button_refund }}</a>
            {% endif %}
        {% endif %}
        
        <a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a></div>
      <h1>{{ heading_title }}</h1>
      <ul class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
      </ul>
    </div>
  </div>
  <div class="container-fluid">
    <div id="transaction-alert" data-message="{{ text_loading }}">
        {% for alert in alerts %}
            <div class="alert alert-{{ alert.type }}"><i class="fa fa-{{ alert.icon }}"></i>&nbsp;{{ alert.text }}
                <button type="button" class="close" data-dismiss="alert">&times;</button>
            </div>
        {% endfor %}
    </div>
    <div class="panel panel-default">
      <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-info-circle"></i>&nbsp;{{ text_edit }}</h3>
      </div>
      <div class="panel-body">
        <form class="form-horizontal">
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_transaction_id }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">
                        {% if is_merchant_transaction %}
                            <a href="{{ url_transaction }}" target="_blank">{{ transaction_id }}</a>
                        {% else %}
                            {{ transaction_id }}
                        {% endif %}
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_merchant }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ merchant }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_order_id }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static"><a href="{{ url_order }}" target="_blank">{{ order_id }}</a></div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_transaction_status }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ status }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_amount }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ amount }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_billing_address_company }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ billing_address_company }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_billing_address_street }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ billing_address_street }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_billing_address_city }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ billing_address_city }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_billing_address_postcode }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ billing_address_postcode }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_billing_address_province }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ billing_address_province }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_billing_address_country }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ billing_address_country }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_browser }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ browser }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_ip }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ ip }}</div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">{{ entry_date_created }}</label>
                <div class="col-sm-10">
                    <div class="form-control-static">{{ date_created }}</div>
                </div>
            </div>
            {% if has_refunds %}
                <hr />
                <h3>{{ text_refunds }}</h3>
                <table class="table table-bordered table-striped">
                    <thead>
                        <th>{{ column_date_created }}</th>
                        <th>{{ column_reason }}</th>
                        <th>{{ column_status }}</th>
                        <th>{{ column_amount }}</th>
                        <th>{{ column_fee }}</th>
                    </thead>
                    <tbody>
                        {% for refund in refunds %}
                            <tr>
                                <td>{{ refund.date_created }}</td>
                                <td>{{ refund.reason }}</td>
                                <td>{{ refund.status }}</td>
                                <td>{{ refund.amount }}</td>
                                <td>{{ refund.fee }}</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% endif %}
        </form>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="squareup-confirm-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">{{ text_confirm_action }}</h4>
            </div>
            <div class="modal-body">
                <h4 id="squareup-confirm-modal-content"></h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">{{ text_close }}</button>
                <button id="squareup-confirm-ok" type="button" class="btn btn-primary">{{ text_ok }}</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="squareup-refund-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <div class="text-center">
                    <i class="fa fa-circle-o-notch fa-spin"></i>&nbsp;{{ text_loading }}
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
$(document).ready(function() {
    var transactionLoading = function() {
        var message = $('#transaction-alert').attr('data-message');

        $('#transaction-alert').html('<div class="text-center alert alert-info"><i class="fa fa-circle-o-notch fa-spin"></i>&nbsp;' + message + '</div>');
    }

    var refreshPage = function() {
        document.location = document.location;
    }

    var transactionError = function(message) {
        $('#transaction-alert').html('<div class="alert alert-danger"><button type="button" class="close" data-dismiss="alert" aria-label="X"><span aria-hidden="true">&times;</span></button><i class="fa fa-exclamation-circle"></i>&nbsp;' + message + '</div>');
    }

    var addOrderHistory = function(data, success_callback) {
        $.ajax({
            url: '{{ catalog }}index.php?route=api/order/history&api_token={{ api_token }}&order_id=' + data.order_id,
            type: 'post',
            dataType: 'json',
            data: data,
            success: function(json) {
                if (json['error']) {
                    refreshPage();
                }

                if (json['success'] && typeof success_callback == 'function') {
                    success_callback();
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {
                transactionError(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                enableTransactionButtons();
            }
        });
    }

    var transactionRequest = function(type, url, data) {
        $.ajax({
            url : url,
            dataType : 'json',
            type : type,
            data : data,
            beforeSend : transactionLoading,
            success : function(json) {
                if (json.error) {
                    refreshPage();
                }

                if (json.success && json.order_history_data) {
                    addOrderHistory(json.order_history_data, function() {
                        refreshPage();
                    });
                }
            },
            error : function(xhr, ajaxSettings, thrownError) {
                transactionError(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                enableTransactionButtons();
            }
        });
    }

    var disableTransactionButtons = function() {
        $('*[data-url-transaction-capture], *[data-url-transaction-void], *[data-url-transaction-refund]').attr('disabled', true);
    }

    var enableTransactionButtons = function() {
        $('*[data-url-transaction-capture], *[data-url-transaction-void], *[data-url-transaction-refund]').attr('disabled', false);
    }

    var modalConfirm = function(url, text) {
        var modal = '#squareup-confirm-modal';
        var content = '#squareup-confirm-modal-content';
        var button = '#squareup-confirm-ok';

        $(content).html(text);
        $(button).unbind().click(function() {
            disableTransactionButtons();

            $(modal).modal('hide');

            transactionRequest('GET', url);
        });

        $(modal).modal('show');
    }

    var refundInputValidate = function(reason_input, amount_input) {
        var result = true;

        if (!$(reason_input)[0].checkValidity()) {
            $(reason_input).closest('.form-group').addClass('has-error');
            result = false;
        } else {
            $(reason_input).closest('.form-group').removeClass('has-error');
        }

        if (!$(amount_input)[0].checkValidity()) {
            $(amount_input).closest('.form-group').addClass('has-error');
            result = false;
        } else {
            $(amount_input).closest('.form-group').removeClass('has-error');
        }

        return result;
    }

    var modalRefund = function(url, url_refund_modal) {
        $('#squareup-refund-modal').modal('show');

        var setModalHtml = function(html) {
            $('#squareup-refund-modal .modal-content').html(html);
        }

        $.ajax({
            url : url_refund_modal,
            dataType : 'json',
            success : function(data) {
                if (typeof data.error != 'undefined') {
                    setModalHtml('<div class="modal-body"><div class="alert alert-danger">' + data.error + '</div></div>');
                } else if (typeof data.html != 'undefined') {
                    setModalHtml(data.html);

                    var invalidRefundAmount = function(element) {
                        var value = parseFloat($(element).val().replace(/[^0-9\.\-]/g, ""));
                        var max = parseFloat($(element).attr('data-max-allowed').replace(/[^0-9\.\-]/g, ""));

                        return (value <= 0) || (value > max);
                    };

                    var flow = {
                        itemized : {
                            steps : [
                                "#squareup-refund-step-itemized-refund",
                                "#squareup-refund-step-itemized-restock"
                            ],
                            final : "#squareup-refund-confirm-itemized"
                        },
                        amount : {
                            steps : [],
                            final : "#squareup-refund-confirm-amount"
                        }
                    };

                    var breadcrumb = [];

                    var showScreenById = function(screenId) {
                        $(".squareup-refund-step").hide();
                        $(screenId).show();
                    }

                    $("#squareup-refund-finish").hide();
                    $("#squareup-refund-back").hide();
                    $("#squareup-refund-next").show();
                    showScreenById("#squareup-refund-initial");

                    var showNextScreen = function(type) {
                        var nextScreenIndex = breadcrumb.length;

                        if (typeof flow[type].steps[nextScreenIndex] == 'string') {
                            $("#squareup-refund-finish").hide();
                            $("#squareup-refund-back").show();
                            $("#squareup-refund-next").show();

                            breadcrumb.push(flow[type].steps[nextScreenIndex]);

                            showScreenById(flow[type].steps[nextScreenIndex]);
                        } else if (typeof flow[type].steps[nextScreenIndex] == 'undefined') {
                            $("#squareup-refund-finish").show();
                            $("#squareup-refund-back").show();
                            $("#squareup-refund-next").hide();

                            breadcrumb.push(flow[type].final);

                            showScreenById(flow[type].final);
                        }
                    }

                    $("#squareup-refund-next").click(function(e) {
                        e.preventDefault();

                        if ($(this).attr('disabled')) {
                            return;
                        }

                        var type = $('input[name="refund_type"]:checked').val();

                        showNextScreen(type);

                        if ($('#squareup-refund-step-itemized-restock').is(':visible')) {
                            var amount_input = '#squareup-refund-itemized-insert';

                            if (!$(amount_input)[0].checkValidity() || invalidRefundAmount(amount_input)) {
                                $(amount_input).closest('.form-group').addClass('has-error');
                                showPreviousScreen(type);
                            } else {
                                $(amount_input).closest('.form-group').removeClass('has-error');

                                // No issues here. Restrict the allowed re-stocks according to the quantity selections from the refund screen

                                var text_summary = 
                                    "{{ text_itemized_refund_restock_total }}"
                                        .replace(/{price_prefix}/, $(amount_input).attr('data-price-prefix'))
                                        .replace(/{price_suffix}/, $(amount_input).attr('data-price-suffix'))
                                        .replace(/{price}/, $(amount_input).val().replace(/[^0-9\.\-]/g, ""));

                                $('#itemized_refund_restock_total').html(text_summary);
                            }
                        } else if ($('#squareup-refund-confirm-itemized').is(':visible')) {
                            var rows = {};

                            var populateRows = function(index, element) {
                                var order_product_id = $(element).attr('data-order-product-id');
                                var type = $(element).attr('data-type');
                                var quantity = parseInt($(element).val());

                                if (quantity <= 0) {
                                    return;
                                }

                                if (typeof rows[order_product_id] == 'undefined') {
                                    rows[order_product_id] = {
                                        'name' : $(element).closest('tr').find('td.itemized_name').html(),
                                        'model' : $(element).closest('tr').find('td.itemized_model').html(),
                                        'quantity_restock' : 0,
                                        'quantity_refund' : 0
                                    };
                                }

                                rows[order_product_id][type] += quantity;
                            };

                            $('[name^="itemized_restock"]').each(populateRows);
                            $('[name^="itemized_refund"]').each(populateRows);

                            if (Object.keys(rows).length === 0) {
                                $('#itemized_refund_restock_items').html('<div class="alert alert-warning">{{ text_no_items_restock_refund }}</div>');
                            } else {
                                var html = '';

                                html += '<div class="table-responsive">';
                                html += '<table class="table table-bordered table-hover">';
                                html += '<thead>';
                                html += '<tr>';
                                html += '<th>{{ column_product_name }}</th>';
                                html += '<th>{{ column_product_model }}</th>';
                                html += '<th>{{ column_product_quantity_refund }}</th>';
                                html += '<th>{{ column_product_quantity_restock }}</th>';
                                html += '</tr>';
                                html += '</thead>';
                                html += '<tbody>';

                                $.each(rows, function(index, row) {
                                    html += '<tr>';
                                    html += '<td>' + row.name + '</td>';
                                    html += '<td>' + row.model + '</td>';
                                    html += '<td>' + row.quantity_refund + '</td>';
                                    html += '<td>' + row.quantity_restock + '</td>';
                                    html += '</tr>';
                                });

                                html += '</tbody>';
                                html += '</table>';
                                html += '</div>';

                                $('#itemized_refund_restock_items').html(html);
                            }
                        }
                    });

                    var showPreviousScreen = function(type) {
                        breadcrumb.pop();

                        var candidatePreviousScreen = breadcrumb[breadcrumb.length - 1];

                        if (typeof candidatePreviousScreen == 'undefined') {
                            $("#squareup-refund-finish").hide();
                            $("#squareup-refund-back").hide();
                            $("#squareup-refund-next").show();

                            showScreenById("#squareup-refund-initial");
                        } else if (typeof candidatePreviousScreen == 'string') {
                            $("#squareup-refund-finish").hide();
                            $("#squareup-refund-back").show();
                            $("#squareup-refund-next").show();

                            showScreenById(candidatePreviousScreen);
                        }
                    }

                    $("#squareup-refund-back").click(function(e) {
                        e.preventDefault();

                        showPreviousScreen($('input[name="refund_type"]:checked').val());
                    });

                    var refundInputValidate = function() {
                        var result = true;
                        var reason_input = "#squareup-refund-reason-insert";
                        var amount_input = "#squareup-refund-amount-insert";

                        if (!$(reason_input)[0].checkValidity()) {
                            $(reason_input).closest('.form-group').addClass('has-error');
                            result = false;
                        } else {
                            $(reason_input).closest('.form-group').removeClass('has-error');
                        }

                        if (!$(amount_input)[0].checkValidity() || invalidRefundAmount(amount_input)) {
                            $(amount_input).closest('.form-group').addClass('has-error');
                            result = false;
                        } else {
                            $(amount_input).closest('.form-group').removeClass('has-error');
                        }

                        return result;
                    }

                    var validateNext = function(e) {
                        if (parseInt($(this).val()) > parseInt($(this).attr("max")) || parseInt($(this).val()) < 0) {
                            $(this).css('background-color', '#f5c1bb');
                            $("#squareup-refund-next").attr('disabled', true);
                        } else {
                            $(this).css('background-color', 'white');
                            $("#squareup-refund-next").attr('disabled', false);
                        }
                    }

                    $('[name^="itemized_refund"]').change(function(e) {
                        var element = $('#squareup-refund-itemized-insert').first();
                        var currentValue = 0;
                        var price = parseFloat($(this).attr('data-price').replace(/[^0-9\.\-]/g, ""));

                        $('[name^="itemized_refund"]').each(function(index, element) {
                            currentValue += price * parseInt($(element).val());
                        });
                        
                        var max = parseFloat($(element).attr('data-max-allowed').replace(/[^0-9\.\-]/g, ""));

                        if (currentValue > max) {
                            currentValue = max;
                        } else if (currentValue < 0) {
                            currentValue = 0;
                        }

                        $(element).val(currentValue);
                    });

                    $('[name^="itemized_refund"], [name^="itemized_restock"]').change(validateNext);
                    $('[name^="itemized_refund"], [name^="itemized_restock"]').keyup(validateNext);

                    $("#squareup-refund-finish").click(function(e) {
                        e.preventDefault();

                        if ($('input[name="refund_type"]:checked').val() == 'amount') {
                            // Amount Refund - validate the manually inserted amount and prepare the POST request
                            if (!refundInputValidate()) {
                                return;
                            }

                            disableTransactionButtons();

                            $('#squareup-refund-modal').modal('hide');

                            transactionRequest('POST', url, {
                                reason : $("#squareup-refund-reason-insert").val(),
                                amount : $("#squareup-refund-amount-insert").val()
                            });
                        } else {
                            // Itemized Refund - display refund confirmation and prepare the POST request
                            disableTransactionButtons();

                            $('#squareup-refund-modal').modal('hide');

                            var restock = {};
                            var refund = {};

                            $('[name^="itemized_restock"]').each(function(index, element) {
                                var key = $(element).attr('data-order-product-id');
                                var value = parseInt($(element).val());

                                if (value > 0) {
                                    restock[key] = value;
                                }
                            });

                            $('[name^="itemized_refund"]').each(function(index, element) {
                                var key = $(element).attr('data-order-product-id');
                                var value = parseInt($(element).val());

                                if (value > 0) {
                                    refund[key] = value;
                                }
                            });

                            transactionRequest('POST', url, {
                                reason : "{{ text_itemized_refund_reason }}",
                                amount : $("#squareup-refund-itemized-insert").val(),
                                restock : restock,
                                refund : refund
                            });
                        }
                    });
                }
            },
            error : function(xhr, ajaxSettings, thrownError) {
                setModalHtml('<div class="modal-body"><div class="alert alert-danger">' + '(' + xhr.statusText + '): ' + xhr.responseText + '</div></div>');
            }
        });
    }

    var order_history_data = {{ order_history_data }};

    if (order_history_data) {
        $.ajax({
            url: '{{ catalog }}index.php?route=api/order/history&api_token={{ api_token }}&order_id=' + order_history_data.order_id,
            type: 'post',
            dataType: 'json',
            data: order_history_data
        });
    }

    $(document).on('click', '*[data-url-transaction-capture]', function() {
        if ($(this).attr('disabled')) return;

        modalConfirm(
            $(this).attr('data-url-transaction-capture'),
            $(this).attr('data-confirm-capture')
        );
    });
        
    $(document).on('click', '*[data-url-transaction-void]', function() {
        if ($(this).attr('disabled')) return;

        modalConfirm(
            $(this).attr('data-url-transaction-void'),
            $(this).attr('data-confirm-void')
        );
    });

    $(document).on('click', '*[data-url-transaction-refund]', function() {
        if ($(this).attr('disabled')) return;

        modalRefund($(this).attr('data-url-transaction-refund'), $(this).attr('data-url-transaction-refund-modal'));
    });
});
</script>
{{ footer }}